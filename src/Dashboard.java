
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp
 */
public class Dashboard extends javax.swing.JFrame {
       private Connection conn=null;
         private PreparedStatement ps=null;
        private ResultSet rs=null;

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        conn=MySQlConnect.connectDB();
//        updateTableData();
             String sql = "Select * from employeeinfo";
            updateTableData(sql);
        
        txtSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchBar();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                searchBar();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }

            
        });

     
    }
    
    private void searchBar(){
        
        String key = txtSearch.getText();
        if(!key.equals("")){
            String sql = "Select * from employeeinfo where employee_name like '%"+ key +"%' or contact like '%" + key + "%'";
            updateTableData(sql);
        }
        else{
           String sql = "Select * from employeeinfo";
           updateTableData(sql); 
        }
    }
    
    private void updateTableData(String sql){
//        String sql = "SELECT * FROM employeeinfo";
        try {
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            jtbData.setModel(getMyTableModel(DbUtils.resultSetToTableModel(rs)));
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Error while fetching Records!");
        }finally{
            try{
                rs.close();
                ps.close();
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(this, "Error while closing rs and ps");
            }
        }
    }
    
    private DefaultTableModel getMyTableModel (TableModel dtm)
    {   
        int nRow = dtm.getRowCount() , nCol = dtm.getColumnCount();
        Object[][] tableData = new Object[nRow][nCol];
        for(int i = 0 ; i < nRow ; i++)
             for(int j =0;j < nCol ; j++)
                 tableData[i][j] = dtm.getValueAt(i,j);
        String[] colHeads = {"ID" , "NAME" , "GENDER" , "AGE" , "BLOOD GROUP", "CONTACT NO" , "QUALIFICATION" , "DOJ" , "ADDRESS" , "IMAGE"};
        DefaultTableModel myModel = new DefaultTableModel(tableData , colHeads){
        @Override
        public boolean isCellEditable(int row,int column)
        {
        return false;
        }
    };
    return myModel;
        
                 
    
    }
    private void clearFields(){
        txtEmpId.setText("");
        txtName.setText("");
        rbtTemp.setSelected(true);
        gender = null;
        
        txtAge.setText("");
        cmbBloodGroup.setSelectedIndex(-1);
        txtContactNo.setText("");
        cmbQualification.setSelectedIndex(-1);
        
        doj.setDate(null);
        txtAddress.setText("");
        txtImagePath.setText("");
        lblImage.setIcon(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        rbtTemp = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtEmpId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtContactNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rbtMale = new javax.swing.JRadioButton();
        rbtFemale = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        cmbBloodGroup = new javax.swing.JComboBox<>();
        cmbQualification = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtUploadImage = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtImagePath = new javax.swing.JTextField();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        lblImage = new javax.swing.JLabel();
        doj = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbData = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        buttonGroup1.add(rbtTemp);
        rbtTemp.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel2.setText("Employee ID");

        txtEmpId.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtEmpId.setEnabled(false);
        txtEmpId.setNextFocusableComponent(txtName);
        txtEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIdActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel3.setText("Name");

        txtName.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtName.setNextFocusableComponent(rbtMale);
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel5.setText("Age");

        txtAge.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtAge.setNextFocusableComponent(cmbBloodGroup);
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtContactNo.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtContactNo.setNextFocusableComponent(cmbQualification);
        txtContactNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactNoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel7.setText("Contact No");

        jLabel8.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel8.setText("Qualification");

        jLabel9.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel9.setText("DOJ");

        rbtMale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rbtMale);
        rbtMale.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        rbtMale.setText("Male");
        rbtMale.setNextFocusableComponent(txtAge);
        rbtMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMaleActionPerformed(evt);
            }
        });

        rbtFemale.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rbtFemale);
        rbtFemale.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        rbtFemale.setText("Female");
        rbtFemale.setNextFocusableComponent(txtAge);
        rbtFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFemaleActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel6.setText("Blood Group");

        cmbBloodGroup.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        cmbBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-", " " }));
        cmbBloodGroup.setSelectedIndex(-1);
        cmbBloodGroup.setNextFocusableComponent(txtContactNo);
        cmbBloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBloodGroupActionPerformed(evt);
            }
        });

        cmbQualification.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        cmbQualification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SSC", "HSC", "BE", "MS" }));
        cmbQualification.setSelectedIndex(-1);

        jLabel1.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel1.setText("Address");

        txtAddress.setColumns(20);
        txtAddress.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtAddress.setRows(5);
        txtAddress.setNextFocusableComponent(btnUpdate);
        jScrollPane1.setViewportView(txtAddress);

        txtUploadImage.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtUploadImage.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\upload.png")); // NOI18N
        txtUploadImage.setText("Upload Image");
        txtUploadImage.setNextFocusableComponent(txtImagePath);
        txtUploadImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUploadImageMouseClicked(evt);
            }
        });
        txtUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUploadImageActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel10.setText("Image Path");

        txtImagePath.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtImagePath.setEnabled(false);
        txtImagePath.setNextFocusableComponent(lblImage);

        jDesktopPane1.setBackground(new java.awt.Color(153, 153, 153));

        lblImage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        lblImage.setNextFocusableComponent(txtSearch);

        jDesktopPane1.setLayer(lblImage, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel1)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(rbtMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbtFemale))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbQualification, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtAge)
                                                .addComponent(txtContactNo)
                                                .addComponent(cmbBloodGroup, 0, 200, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(doj, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUploadImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtImagePath)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                .addGap(132, 132, 132)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbtMale)
                                    .addComponent(rbtFemale)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cmbBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cmbQualification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel9))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(doj, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jDesktopPane1)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\search-icon.png")); // NOI18N
        jLabel12.setText("Search");

        txtSearch.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        txtSearch.setNextFocusableComponent(btnNew);
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnNew.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\new.gif")); // NOI18N
        btnNew.setText("New");
        btnNew.setNextFocusableComponent(btnSave);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\save.png")); // NOI18N
        btnSave.setText("Save");
        btnSave.setNextFocusableComponent(btnUpdate);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\update.gif")); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setNextFocusableComponent(btnDelete);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\delete.png")); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setNextFocusableComponent(btnClear);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\brush.png")); // NOI18N
        btnClear.setText("Clear");
        btnClear.setNextFocusableComponent(btnPrint);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnPrint.setIcon(new javax.swing.ImageIcon("C:\\java\\Advance Java\\jdbc\\images\\print.jpg")); // NOI18N
        btnPrint.setText("Print");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNew)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnClear)
                .addGap(18, 18, 18)
                .addComponent(btnPrint)
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnPrint))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jtbData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbData);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIdActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtContactNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactNoActionPerformed
    private String gender = "";
    private byte[] byteImage = null;
    private void rbtMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMaleActionPerformed
        // TODO add your handling code here:
        gender = "Male";
        
    }//GEN-LAST:event_rbtMaleActionPerformed

    private void rbtFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFemaleActionPerformed
        // TODO add your handling code here:
        gender = "Female";
    }//GEN-LAST:event_rbtFemaleActionPerformed

    private void txtUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUploadImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUploadImageActionPerformed

    private void cmbBloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBloodGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBloodGroupActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        clearFields();
        btnNew.setEnabled(false);
        btnSave.setEnabled(true);
        btnClear.setEnabled(true);
                
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        
        if(txtName.getText().equals("") || txtAge.getText().equals("") || cmbBloodGroup.getSelectedItem().toString().equals("")
                || txtContactNo.getText().equals("") || gender.equals("") || cmbQualification.getSelectedItem().toString().equals("")
                || doj.getDate() == null  )
        {
            System.out.println("Invalid");
            JOptionPane.showMessageDialog(this,"Invalid Entries");
        }
        else
        {
            
        
        String sql = "insert into employeeinfo(employee_name,gender,age,blood_group,contact,qualification,doj,address,employee_image) Values(?,?,?,?,?,?,?,?,?)";
        try{
            ps = conn.prepareStatement(sql);
            ps.setString(1,txtName.getText());
            ps.setString(2,gender);
            ps.setInt(3, Integer.parseInt(txtAge.getText()));
            ps.setString(4,cmbBloodGroup.getSelectedItem().toString());
            ps.setString(5,txtContactNo.getText());
            ps.setString(6,cmbQualification.getSelectedItem().toString());
            
            Date date = doj.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String strdoj = dateFormat.format(date);
            
            ps.setString(7,strdoj);
            ps.setString(8,txtAddress.getText());
            ps.setBytes(9,byteImage);
            ps.execute();
            btnSave.setEnabled(false);
            btnClear.setEnabled(false);
            btnNew.setEnabled(true);
            updateTableData(sql);
            JOptionPane.showMessageDialog(this,"Inserted Successfully");
            
            
        }
        catch(SQLException ex){
         JOptionPane.showMessageDialog(this,ex);   
        }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtUploadImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUploadImageMouseClicked
                    // TODO add your handling code here:
                    //JFileChooser is file dialog of swing!
                    JFileChooser chooser = new JFileChooser();
                    FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("image files",ImageIO.getReaderFileSuffixes());
                    chooser.setFileFilter(imageFilter);
                    //creates open file dialog
                    chooser.showOpenDialog(this);
                    //Returns the file which has been selected
                    File f = chooser.getSelectedFile();
                    //retrives the path of selected file
                    if(f!= null){
                        String imagePath = f.getAbsolutePath();
                        txtImagePath.setText(f.getAbsolutePath());
                        try{
                            BufferedImage image = Thumbnails.of(f).size(223,275).asBufferedImage();
                            ImageIcon icon = new ImageIcon(image);
                            lblImage.setIcon(icon);
                            
                            //Making my image to be Converted to Byte[]
                            ByteArrayOutputStream baos = new ByteArrayOutputStream();
                            ImageIO.write(image,"jpeg",baos);
                            byteImage = baos.toByteArray();
                        }
                        catch(Exception e){
                        }
                    }
    }//GEN-LAST:event_txtUploadImageMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void jtbDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbDataMouseClicked
        // TODO add your handling code here:
        int selectedRow = jtbData.getSelectedRow();
        String selectedEmpID = jtbData.getModel().getValueAt(selectedRow,0).toString();
        
        try{
            String sql = "SELECT * FROM employeeinfo WHERE employee_id = "+selectedEmpID;
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            if(rs.next()){
                txtEmpId.setText(rs.getString("employee_id"));
                txtName.setText(rs.getString("employee_name"));
                
                String dbGender = rs.getString("gender");
                if("Male".equals(dbGender)){
                    rbtMale.setSelected(true);
                    gender = "Male";
                }else if("Female".equals(dbGender)){
                    rbtFemale.setSelected(true);
                    gender = "Female";
                }
                
                txtAge.setText(rs.getString("age"));
                cmbBloodGroup.setSelectedItem(rs.getString("blood_group"));
                txtContactNo.setText(rs.getString("contact"));
                cmbQualification.setSelectedItem(rs.getString("qualification"));
                
                String strDateValue = rs.getString("doj");
                Date dateDOJ = new SimpleDateFormat("yyyy-MM-dd").parse(strDateValue);
                
                doj.setDate(dateDOJ);
                txtAddress.setText(rs.getString("address"));
                byteImage = rs.getBytes("employee_image");
                lblImage.setIcon(new ImageIcon(ImageIO.read(new ByteArrayInputStream(byteImage))));
                
                //ENABLING BUTTONS
                
                btnUpdate.setEnabled(true);
                btnDelete.setEnabled(true);
                btnClear.setEnabled(true);
                
            }
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jtbDataMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        String sql = "UPDATE employeeinfo SET employee_name = ?,gender = ?,age = ?,blood_group = ?,contact = ?,qualification = ?,doj = ?,address = ?"
                + ",employee_image = ? WHERE employee_id = ?";
        
        try{
            ps = conn.prepareStatement(sql);
            ps.setString(1,txtName.getText());
            ps.setString(2,gender);
            ps.setInt(3, Integer.parseInt(txtAge.getText()));
            ps.setString(4,cmbBloodGroup.getSelectedItem().toString());
            ps.setString(5,txtContactNo.getText());
            ps.setString(6,cmbQualification.getSelectedItem().toString());
            
            Date date = doj.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String strdoj = dateFormat.format(date);
            
            ps.setString(7,strdoj);
            ps.setString(8,txtAddress.getText());
            ps.setBytes(9,byteImage);
            ps.setInt(10,Integer.parseInt(txtEmpId.getText()));
            ps.execute();
            btnSave.setEnabled(false);
            btnClear.setEnabled(false);
            btnNew.setEnabled(true);
            updateTableData(sql);
            JOptionPane.showMessageDialog(this,"Updated Successfully");
            
            
        }
        catch(SQLException ex){
         JOptionPane.showMessageDialog(this,ex);   
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(this,"please select some record to be deleted");
        }else{
            int btn = JOptionPane.showConfirmDialog(this, "do you really want to delete","Delete!",JOptionPane.YES_NO_OPTION);
            if(btn == JOptionPane.YES_OPTION){
                try{
                    //YOU PRESSED YES
            
                String sql = "DELETE FROM employeeinfo WHERE employee_id = ?";
                ps = conn.prepareStatement(sql);
                ps.setInt(1,Integer.parseInt(txtEmpId.getText()));
                ps.execute();
                updateTableData(sql);
                clearFields();
                btnUpdate.setEnabled(false);
                btnDelete.setEnabled(false);
                btnClear.setEnabled(false);
                JOptionPane.showMessageDialog(this, "Record Deleted Successfully");
                }catch(Exception e){
                   JOptionPane.showMessageDialog(this,"Error while deleting record" + e);
                }
            }
            
            
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbBloodGroup;
    private javax.swing.JComboBox<String> cmbQualification;
    private com.toedter.calendar.JDateChooser doj;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtbData;
    private javax.swing.JLabel lblImage;
    private javax.swing.JRadioButton rbtFemale;
    private javax.swing.JRadioButton rbtMale;
    private javax.swing.JRadioButton rbtTemp;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtImagePath;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JButton txtUploadImage;
    // End of variables declaration//GEN-END:variables
}
